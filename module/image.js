// http://p0.so.qhimgs1.com/bdr/_240_/t01ce327258da4bddbc.jpglet Bower = require('./bower')let config = require('../config/index').imagelet tool = require('../tool/index')let cheerio = require('cheerio')let images = require('images')let getPixels = require("get-pixels")let mkdirp = require('mkdirp')let request = require("request")let fs = require("fs")let path = require("path")var download = function(url, dir, filename, callback){    request.head(url, function(err, res, body){        request(url).pipe(fs.createWriteStream(dir + "/" + filename))        callback()    })}var imgChacheUrl = path.join(__dirname,'chache')console.log(imgChacheUrl)mkdirp(imgChacheUrl, function(err) {    if(err){        console.log(err)    }})class Imager{    constructor(){        this.bower = new Bower()        this.gread = 'MNHQ&OC?7>!:-;.'        this.jibie = 255 / this.gread.length    }    getGread(num){        return Math.round(num)    }    toShow(pixels) {        var str = ''        var width = pixels.shape[0]        var height = pixels.shape[1]        for(var i=0; i<height; i++){            for(var j=0; j<width; j++){                var r = pixels.get(j,i,0)                var g = pixels.get(j,i,1)                var b = pixels.get(j,i,2)                var grr = r * 0.299 + g * 0.587 + b * 0.114                str += this.gread.charAt(Math.round(grr / this.jibie))            }            str+='\n'        }        console.log(str)    }    getImageString(cmdArguments){        if(!cmdArguments){            console.log('请输入要搜索的图片名称！')            return        }        this.bower.openPage(            config.url + encodeURI(cmdArguments),            data=>{                let $ = cheerio.load(data);                let imgList = $(config.imgClassName)                let imgSrc = ''                let ggArray = []                imgList.each((index, value)=>{                    let img =  $(value).attr('src') || $(value).attr('data-src')                    if(img != '' && img.indexOf('base64') == -1){                        ggArray.push(img)                    }                })                imgSrc = ggArray[tool.randomRange(0, ggArray.length-1)]                let url = imgSrc                let fileName = new Date().getTime()+'.jpg'                download(url, imgChacheUrl, fileName, ()=>{                    console.log('渲染中...')                    setTimeout(()=>{                        let buff = images(imgChacheUrl+'/'+fileName).size(config.size).encode("jpg", {operation:50})                        getPixels(buff, 'image/jpg', (err, pixels)=> {                            if(err) {                                console.log("Bad image path")                                return                            }                            this.toShow(pixels)                        })                    }, 1000)                })            },            error=>{                console.log(config.error)            }        )    }}module.exports = {    consoleImageString: function (cmdArguments) {        new Imager().getImageString(cmdArguments)    }}